apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  generation: 9
  labels:
    app: shopify-challenge
  name: shopify-challenge
  namespace: default
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/shopify-challenge
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shopify-challenge
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: shopify-challenge
    spec:
      initContainers:
        # This container clones the desired git repo to the EmptyDir volume.
        - name: git-clone
          image: alpine/git # Any image with git will do
          args:
            - clone
            - --single-branch
            - --
            - https://github.com/almiche/shopi2018 # Your repo
            - /repo # Put it in the volume
          securityContext:
            runAsUser: 1 # Any non-root user will do. Match to the workload.
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: git-repo
              mountPath: /repo
      containers:
        - name: shopishop
          image: gcr.io/handy-heuristic-217023/shopishop:1.2
          ports:
            - containerPort: 9292
          imagePullPolicy: Always
          resources: {}
          env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: cloudsql-db-credentials
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: cloudsql-db-credentials
          volumeMounts:
            - name: git-repo
              mountPath: /repo  
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=handy-heuristic-217023:us-central1:shopi2018=tcp:3306",
                    "-credential_file=/secret/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secret/cloudsql
              readOnly: true

      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: git-repo
          emptyDir: {}